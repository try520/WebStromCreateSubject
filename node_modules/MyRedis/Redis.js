/**
 * Created with JetBrains WebStorm.
 * User: tianling
 * Date: 13-9-24
 * Time: 下午9:13
 * To change this template use File | Settings | File Templates.
 */
var Redis = require ( 'redis' );
var port = "6379";
var host = "127.0.0.1";

var GetClient = function ( CallBack ) {
    var RedisClient = Redis.createClient ( port , host );
    RedisClient.on ( "error" , function ( err ) {
        console.log ( "连接Redis失败 :" + err );
        CallBack ( err , RedisClient );
    } );
    RedisClient.on ( 'connect' , function () {
        CallBack ( false , RedisClient );
    } );
}

exports. GetClient=GetClient;
/*-================================*/
var Get = function ( Key , CallBack ) {
    GetClient ( function ( err , RedisClient ) {
        if ( err ) {
            CallBack ( err , null );
            return;
        }
        RedisClient.get ( Key , function ( err , Result ) {
            CallBack ( err , Result );
            RedisClient.quit ();
        } );
    } )
}

var Get_NoEnd=function(RedisClient,Key,CallBack){
    RedisClient.get ( Key , function ( err , Result ) {
        CallBack ( err , Result );
    } );
}

exports.Get=function(){
    if (CheckArgs ( [String , Function] , arguments ) ) {
        Get ( arguments[0] ,arguments[1]);
        return;
    }
    if (CheckArgs ( [Object, String , Function] , arguments ) ) {
        Get_NoEnd ( arguments[0] ,arguments[1],arguments[2]);
        return;
    }
    console.log("Redis.js=>Get 缺少参数 或参数类型错误");
 }
/*-================================*/
  var Set=function(Key,Value,CallBack){
      GetClient ( function ( err , RedisClient ) {
          if ( err ) {
              CallBack ( err , null );
              return;
          }

          RedisClient.set ( Key ,Value, function ( err , Result ) {
              CallBack ( err , Result );
              RedisClient.quit ();
          } );
      } )
  }

var Set_Expire=function(Key,Value,Expire,CallBack){
    GetClient ( function ( err , RedisClient ) {
        if ( err ) {
            CallBack ( err , null );
            return;
        }
        RedisClient.set ( Key ,Value, function ( err , Result ) {

            if(!err){
                RedisClient.send_command("Expire",[Key , Expire]);
            }
             CallBack ( err , Result );
            RedisClient.quit ();
        } );
    } )
}

exports.Set=function(){
    if (CheckArgs ( [String ,String ] , arguments ) ) {
        Set ( arguments[0] ,arguments[1] );
        return;
    }
    if (CheckArgs ( [String ,String , Function] , arguments ) ) {
        Set ( arguments[0] ,arguments[1] ,arguments[2]);
        return;
    }
    if (CheckArgs ( [String , String , Number ] , arguments ) ) {
        Set_Expire ( arguments[0] ,arguments[1],arguments[2]);
        return;
    }
    if (CheckArgs ( [String , String , Number , Function] , arguments ) ) {
        Set_Expire ( arguments[0] ,arguments[1],arguments[2] ,arguments[3]);
        return;
    }
    console.log("Redis.js=>Set 缺少参数 或参数类型错误");

}

var CheckArgs = function ( types , args ) {
    //检测参数个数
    if ( types.length != args.length ) {
        return false;
    }
    //检测参数类型
    for ( var i = 0 ; i < args.length ; i ++ ) {
        if ( args[i].constructor != types[i] ) {
            return false;
        }
    }
    return true;
}