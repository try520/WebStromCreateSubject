/**
 * Created with CodeModel.
 * User: 田林
 * Date: 2013-09-19
 * Time: 07:46:13
 * To change this template use File | Settings | File Templates.
 */
var Tools = require ( './Tools' );
var mysql = require ( 'mysql' );
var pool = mysql.createPool ( {
    host: '127.0.0.1',
    port: '',
    user: 'root',
    password: 'sa',
    database: 'NewPromotion'

} );

var GetConnection = function ( CallBack ) {
    pool.getConnection ( function ( err , connection ) {
        if ( err ) {
            console.log ( this );
        }
        /* implement another format 支持Json数据 参数化查询*/
        connection.config.queryFormat = function ( query , values ) {
            if ( ! values ) return query;
            return query.replace ( /\?(\w+)/g , function ( txt , key ) {
                if ( values.hasOwnProperty ( key ) ) {
                    return this.escape ( values[key] );
                }
                return txt;
            }.bind ( this ) );
        }
        CallBack ( err , connection );
    } );
}
exports.GetConnection = GetConnection;

var Query = function ( SqlStr , CallBack ) {
    GetConnection ( function ( err , connection ) {
        if ( err ) {
            CallBack ( err , null );
            return;
        }
        connection.query ( SqlStr , function ( err , Rows ) {
            CallBack ( err , Rows );
            connection.release ();
        } )
    } )
}

var Query_Parms = function ( SqlStr , Values , CallBack ) {
    GetConnection ( function ( err , connection ) {
        if ( err ) {
            CallBack ( err , null );
            return;
        }
        connection.query ( SqlStr , Values , function ( err , Rows ) {
            CallBack ( err , Rows );
            connection.release ();
        } )
    } )
}

var Query_NoRelease = function (connection, SqlStr , Values , CallBack ) {
        connection.query ( SqlStr , Values , function ( err , Rows ) {
            CallBack ( err , Rows );
        } )
}

exports.Query = function () {
    if ( Tools.CheckArgs ( [String, Function] , arguments ) ) {
        Query ( arguments[0] , arguments[1] );
        return;
    }
    if ( Tools.CheckArgs ( [String, Object, Function] , arguments ) ) {
        Query_Parms ( arguments[0] , arguments[1] , arguments[2] );
        return;
    }
    if ( Tools.CheckArgs ( [Object , String, Object, Function] , arguments ) ) {
        Query_NoRelease ( arguments[0] , arguments[1] , arguments[2],arguments[3] );
        return;
    }
}

